#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define fs first
#define sd second
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<ll,ll> pl;
typedef vector<ll> vl;
typedef vector<pair<ll,ll>> vll;

const int N = 1e6 + 3, Mod = 1e9 + 7;
const int maxN=1e3+3;

ll arr[maxN][maxN];
ll r,c,a,b;


struct Point {
    int x, y;
};

bool doOverlap(Point l1, Point r1, Point l2, Point r2)
{
    // If one rectangle is on left side of other
    if (l1.x > r2.x || l2.x > r1.x)
        return false;
 
    // If one rectangle is above other
    if (r1.y < l2.y || r2.y < l1.y)
        return false;
 
    return true;
}

ll calc(ll i,ll j){
	ll ret=0;
	if(i+a<=r&&j+b<=c){
		ll temp=0;
		temp+=(arr[i+a][j+b]);
		temp-=(arr[i+a][j-1]);
		temp-=(arr[i-1][j+b]);
		temp+=(arr[i-1][j-1]);
		ret=max(ret,temp);
	}
	//cout<<ret<<"..";
	return ret;
}

ll calcs(ll i,ll j){
	ll ret=0;
	swap(a,b);
	if(i+a<=r&&j+b<=c){
		ll temp=0;
		temp+=(arr[i+a][j+b]);
		temp-=(arr[i+a][j-1]);
		temp-=(arr[i-1][j+b]);
		temp+=(arr[i-1][j-1]);
		ret=max(ret,temp);
	}
	swap(a,b);
	return ret;
}

void solve(){
	cin>>r>>c;
	cin>>a>>b;
	a--; b--;
	if(a>b)swap(a,b);
	for(int i=1;i<=r;i++){
		for(int j=1;j<=c;j++){
			cin>>arr[i][j];
		}
	}
	for(int i=1;i<=r;i++){
		for(int j=1;j<=c;j++){
			arr[i][j]+=(arr[i-1][j]+arr[i][j-1]);
			arr[i][j]-=arr[i-1][j-1];
		}
	}
	ll ans=0;
	for(int i=1;i+a<=r;i++){
		for(int j=1;j+b<=c;j++){
			ll temp=0;
			ll temp2=0;
			temp=calc(i,j);
			if(temp==0)continue;
			for(int k=1;k<=r;k++){
				for(int l=1;l<=c;l++){
					Point P1,P2,Q1,Q2;
					P1.x=i; P1.y=j; P2.x=i+a; P2.y=j+b; Q1.x=k; Q1.y=l; Q2.x=k+a; Q2.y=l+b;
					if(!doOverlap(P1,P2,Q1,Q2))temp2=max(temp2,calc(k,l));
					Q2.x=k+b;
					Q2.y=l+a;
					if(!doOverlap(P1,P2,Q1,Q2))temp2=max(temp2,calcs(k,l));
				}
			}
			if(temp+temp2>ans){
				ans=temp+temp2;
			}
		}
	}
	swap(a,b);
	for(int i=1;i+a<=r;i++){
		for(int j=1;j+b<=c;j++){
			ll temp=0;
			ll temp2=0;
			temp=calc(i,j);
			if(temp==0)continue;
			for(int k=1;k<=r;k++){
				for(int l=1;l<=c;l++){
					Point P1,P2,Q1,Q2;
					P1.x=i; P1.y=j; P2.x=i+a; P2.y=j+b; Q1.x=k; Q1.y=l; Q2.x=k+a; Q2.y=l+b;
					if(!doOverlap(P1,P2,Q1,Q2))temp2=max(temp2,calc(k,l));
					Q2.x=k+b;
					Q2.y=l+a;
					if(!doOverlap(P1,P2,Q1,Q2))temp2=max(temp2,calcs(k,l));
				}
			}
			ans=max(ans,temp+temp2);
		}
	}
	cout<<ans<<endl;
}
 
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr); 
	cout.tie(nullptr);
	
	int t=1;
 	for(int i=0;i<t;i++){
		//cout<<"Case #"<<i+1<<": ";
		solve();
	}
}

